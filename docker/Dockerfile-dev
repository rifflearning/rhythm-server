# Args for FROM directives
ARG NODE_VER=8

#
# ---- Base Node image ----
FROM node:${NODE_VER} AS base
# The node:8 npm (v 5.6) has some issues, update it to latest
RUN npm install -g npm
# Modified bashrc which defines some aliases and an interactive prompt
COPY bashrc /root/.bashrc
COPY --chown=node:node bashrc /home/node/.bashrc
# set the root password to password (I don't care that it's simple it's only for development)
# this shouldn't exist in a production container
RUN echo "root:password" | chpasswd
# create and set working directory owned by non-root user; set that user
WORKDIR /app
RUN chown node /app
USER node

#
# ---- Development ----
FROM base AS development
LABEL Description="dev: this image runs the riff-server which collects utterance info made by participants in meetings"
# This is the development image, set NODE_ENV to reflect that
ENV NODE_ENV=development
# npm install (and build if needed) must exist in the volume bound at /app
# expected to be the local repo working directory.
#
# allow the port used to be specified, default to 3000
ARG PORT=3000
ENV PORT=$PORT
# expose port
EXPOSE $PORT
# allow all referenced environment variables to be overridden
ARG AUTH_ON
ARG AUTH_TOKEN_EXPIRESIN
ARG AUTH_TOKEN_SECRET
ARG CRYPTO_KEY
ARG DEFAULT_USER_EMAIL
ARG DEFAULT_USER_PASSWORD
ARG MONGODB_URI
ARG MONGO_CERT
ARG REPORT_EMAIL_FROM
ARG REPORT_EMAIL_HOST
ARG REPORT_EMAIL_LOGIN
ARG REPORT_EMAIL_PASSWORD
ARG REPORT_EMAIL_SUBJECT
ARG REPORT_EMAIL_TEXT
ARG SEND_REPORT
ARG END_MEETING_AFTER_MINUTES
# Set the environment variables w/ values passed in
# (Why are we doing this when if the environment var doesn't exist the .env file is read?
#  right now using the .env file seems better than the environment, later the config files. -mjl)
ENV AUTH_ON=$AUTH_ON \
    AUTH_TOKEN_EXPIRESIN=$AUTH_TOKEN_EXPIRESIN \
    AUTH_TOKEN_SECRET=$AUTH_TOKEN_SECRET \
    CRYPTO_KEY=$CRYPTO_KEY \
    DEFAULT_USER_EMAIL=$DEFAULT_USER_EMAIL \
    DEFAULT_USER_PASSWORD=$DEFAULT_USER_PASSWORD \
    MONGODB_URI=$MONGODB_URI \
    MONGO_CERT=$MONGO_CERT \
    REPORT_EMAIL_FROM=$REPORT_EMAIL_FROM \
    REPORT_EMAIL_HOST=$REPORT_EMAIL_HOST \
    REPORT_EMAIL_LOGIN=$REPORT_EMAIL_LOGIN \
    REPORT_EMAIL_PASSWORD=$REPORT_EMAIL_PASSWORD \
    REPORT_EMAIL_SUBJECT=$REPORT_EMAIL_SUBJECT \
    REPORT_EMAIL_TEXT=$REPORT_EMAIL_TEXT \
    SEND_REPORT=$SEND_REPORT \
    END_MEETING_AFTER_MINUTES=$END_MEETING_AFTER_MINUTES
# when a container is started w/ this image the riff-server repository working
# directory must be bound at /app and all dependent packages installed for this
# command to correctly start the riff-server
VOLUME ["/app"]
CMD ["npm", "start"]
